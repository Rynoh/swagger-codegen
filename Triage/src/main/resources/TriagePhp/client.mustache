<?php
/**
 * Contains the Client class.
 *
 * @category   {{moduleName}}
 * @package    {{modelPackage}}
 * @subpackage {{modelSubPackage}}
 *
 * @author     {{{author}}}
 * @since      {{currentDate}}
 */

/**
 * @namespace
 */
namespace {{modelSubPackage}};

use TriStudio\Resource\AbstractVariableObject;
use TriStudio\ServiceManager\AbstractServiceManagerAwareBase;
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#operation}}
{{#bodyParams}}
use {{resourceSubPackage}}\{{baseType}}VO;
{{/bodyParams}}
{{/operation}}
{{/operations}}
{{/apis}}
{{/apiInfo}}

/**
 * The client that will deal with setting the configuration onto the end points before making the service call
 *
 * @category   {{moduleName}}
 * @package    {{modelPackage}}
 * @subpackage {{modelSubPackage}}
 *
 * @author     {{{author}}}
 * @since      {{currentDate}}
 */
class {{driverName}}Client extends AbstractServiceManagerAwareBase
{

    /**
     * The base url for the project.
     *
     * @var string
     */
    protected $sBaseUrl = '/v1';

    /**
     * The configuration for the object.
     *
     * @var array
     */
    protected $arrConfig = array();

    /**
     * Set basic configuration onto the object
     *
     * @param array $arrConfig The configuration
     *
     * @author {{{author}}}
     * @since  {{currentDate}}
     *
     * @return void
     */
    public function __construct(array $arrConfig)
    {
        $this->arrConfig = $arrConfig;
        $this->arrConfig['url_base'] = $this->sBaseUrl;
    }

    {{#apiInfo}}
    {{#apis}}
    {{#operations}}
    {{#operation}}
    /**
     * Will make the required call to the {{classname}}Endpoint
     *
     {{#hasParams}}
     {{#pathParams}}
     * @param string ${{baseName}} - {{description}}
     {{/pathParams}}
     {{/hasParams}}
     {{#isGetList}}
     * @param array $arrQueryParams - (Optional) Any query params to filter
     {{/isGetList}}
     {{^isGetList}}
     {{^isGet}}
     * @param \TriStudio\Resource\AbstractVariableObject $objVo - The payload VO
     {{/isGet}}
     {{/isGetList}}
     *
     * @author {{{author}}}
     * @since  {{currentDate}}
     *
     * @throws \TriCore\Driver\Exception\RuntimeException Throw exception if the VO type is wrong
     *
     * @return \TriStudio\Resource\AbstractVariableObject The response VO
     */
    {{#isGet}}
    public function {{operationId}}({{#hasParams}}{{#pathParams}}{{#required}}${{baseName}}{{^-last}}, {{/-last}}{{/required}}{{/pathParams}}{{/hasParams}})
    {{/isGet}}
    {{#isGetList}}
    public function {{operationId}}({{#hasParams}}{{#pathParams}}{{#required}}${{baseName}}{{^-last}}, {{/-last}}{{/required}}{{/pathParams}}{{/hasParams}}$arrQueryParams = array())
    {{/isGetList}}
    {{^isGetList}}
    {{^isGet}}
    public function {{operationId}}({{#hasParams}}{{#pathParams}}{{#required}}${{baseName}}{{^-last}}, {{/-last}}{{/required}}{{/pathParams}}{{/hasParams}}AbstractVariableObject $objVo)
    {{/isGet}}
    {{/isGetList}}
    {
        {{#bodyParams}}
        if (!$objVo instanceof {{#initialCaps}}{{baseType}}{{/initialCaps}}VO) {
            $sMessage = sprintf(
                'Expected type [%s] but received type [%s] on endpoint [%s]',
                '{{modelPackage}}\{{paramName}}VO',
                get_class($objVo),
                get_class($this)
            );
            throw new \TriCore\Driver\Exception\RuntimeException(
                $sMessage,
                \TriCore\Driver\Exception\RuntimeException::UNEXPECTED_ENDPOINT_PAYLOAD_PARAM
            );
        }
        {{/bodyParams}}
        {{^hasParams}}
        $arrParams = array();
        {{/hasParams}}
        {{#hasParams}}
        $arrParams = array(
        {{#pathParams}}
            '{{baseName}}' => ${{baseName}}{{^-last}},{{/-last}}
        {{/pathParams}}
        );
        {{/hasParams}}
        /** @var \{{apiSubPackage}}\{{classname}}Endpoint $objEndpoint */
        $objEndpoint = $this->getServiceManager()->get('{{classname}}Endpoint');
        $objEndpoint->setConfig($this->arrConfig);
        $objEndpoint->setParams($arrParams);
        {{^isGetList}}
        {{^isGet}}
        $objEndpoint->setPayload($objVo);
        {{/isGet}}
        {{/isGetList}}
        {{#isGetList}}
        $objEndpoint->setQueryParams($arrQueryParams);
        {{/isGetList}}
        return $objEndpoint->{{operationId}}();
    }

    {{/operation}}
    {{/operations}}
    {{/apis}}
    {{/apiInfo}}
}